<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.pibbletv.user_service.integration.UserControllerTest" tests="15" skipped="0" failures="13" errors="0" timestamp="2025-05-10T00:40:28.668Z" hostname="DESKTOP-NS6POVE" time="0.801">
  <properties/>
  <testcase name="testUnbanUser_shouldReturnBadRequest_whenUserNotFound()" classname="com.pibbletv.user_service.integration.UserControllerTest" time="0.401">
    <failure message="java.lang.AssertionError: Status expected:&lt;400 BAD_REQUEST&gt; but was:&lt;403 FORBIDDEN&gt;" type="java.lang.AssertionError">java.lang.AssertionError: Status expected:&lt;400 BAD_REQUEST&gt; but was:&lt;403 FORBIDDEN&gt;
	at org.springframework.test.util.AssertionErrors.fail(AssertionErrors.java:61)
	at org.springframework.test.util.AssertionErrors.assertEquals(AssertionErrors.java:128)
	at org.springframework.test.web.reactive.server.StatusAssertions.lambda$assertStatusAndReturn$4(StatusAssertions.java:236)
	at org.springframework.test.web.reactive.server.ExchangeResult.assertWithDiagnostics(ExchangeResult.java:232)
	at org.springframework.test.web.reactive.server.StatusAssertions.assertStatusAndReturn(StatusAssertions.java:236)
	at org.springframework.test.web.reactive.server.StatusAssertions.isBadRequest(StatusAssertions.java:131)
	at com.pibbletv.user_service.integration.UserControllerTest.testUnbanUser_shouldReturnBadRequest_whenUserNotFound(UserControllerTest.java:240)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
</failure>
  </testcase>
  <testcase name="testUpdateUser_shouldReturnBadRequest_whenUserDoesNotExist()" classname="com.pibbletv.user_service.integration.UserControllerTest" time="0.093">
    <failure message="java.lang.AssertionError: Status expected:&lt;400 BAD_REQUEST&gt; but was:&lt;403 FORBIDDEN&gt;" type="java.lang.AssertionError">java.lang.AssertionError: Status expected:&lt;400 BAD_REQUEST&gt; but was:&lt;403 FORBIDDEN&gt;
	at org.springframework.test.util.AssertionErrors.fail(AssertionErrors.java:61)
	at org.springframework.test.util.AssertionErrors.assertEquals(AssertionErrors.java:128)
	at org.springframework.test.web.reactive.server.StatusAssertions.lambda$assertStatusAndReturn$4(StatusAssertions.java:236)
	at org.springframework.test.web.reactive.server.ExchangeResult.assertWithDiagnostics(ExchangeResult.java:232)
	at org.springframework.test.web.reactive.server.StatusAssertions.assertStatusAndReturn(StatusAssertions.java:236)
	at org.springframework.test.web.reactive.server.StatusAssertions.isBadRequest(StatusAssertions.java:131)
	at com.pibbletv.user_service.integration.UserControllerTest.testUpdateUser_shouldReturnBadRequest_whenUserDoesNotExist(UserControllerTest.java:138)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
</failure>
  </testcase>
  <testcase name="testUpdateUser_shouldReturnBadRequest_whenUserIdIsNull()" classname="com.pibbletv.user_service.integration.UserControllerTest" time="0.021">
    <failure message="org.mockito.exceptions.misusing.MissingMethodInvocationException: &#10;when() requires an argument which has to be 'a method call on a mock'.&#10;For example:&#10;    when(mock.getArticles()).thenReturn(articles);&#10;&#10;Also, this error might show up because:&#10;1. you stub either of: final/private/native/equals()/hashCode() methods.&#10;   Those methods *cannot* be stubbed/verified.&#10;   Mocking methods declared on non-public parent classes is not supported.&#10;2. inside when() you don't call method on mock but on some other object.&#10;" type="org.mockito.exceptions.misusing.MissingMethodInvocationException">org.mockito.exceptions.misusing.MissingMethodInvocationException: 
when() requires an argument which has to be 'a method call on a mock'.
For example:
    when(mock.getArticles()).thenReturn(articles);

Also, this error might show up because:
1. you stub either of: final/private/native/equals()/hashCode() methods.
   Those methods *cannot* be stubbed/verified.
   Mocking methods declared on non-public parent classes is not supported.
2. inside when() you don't call method on mock but on some other object.

	at app//com.pibbletv.user_service.integration.UserControllerTest.testUpdateUser_shouldReturnBadRequest_whenUserIdIsNull(UserControllerTest.java:116)
	at java.base@17.0.14/java.lang.reflect.Method.invoke(Method.java:569)
	at java.base@17.0.14/java.util.ArrayList.forEach(ArrayList.java:1511)
	at java.base@17.0.14/java.util.ArrayList.forEach(ArrayList.java:1511)
</failure>
  </testcase>
  <testcase name="testGetUser_shouldReturnUser_whenFound()" classname="com.pibbletv.user_service.integration.UserControllerTest" time="0.09">
    <failure message="java.lang.AssertionError: Status expected:&lt;200 OK&gt; but was:&lt;401 UNAUTHORIZED&gt;" type="java.lang.AssertionError">java.lang.AssertionError: Status expected:&lt;200 OK&gt; but was:&lt;401 UNAUTHORIZED&gt;
	at org.springframework.test.util.AssertionErrors.fail(AssertionErrors.java:61)
	at org.springframework.test.util.AssertionErrors.assertEquals(AssertionErrors.java:128)
	at org.springframework.test.web.reactive.server.StatusAssertions.lambda$assertStatusAndReturn$4(StatusAssertions.java:236)
	at org.springframework.test.web.reactive.server.ExchangeResult.assertWithDiagnostics(ExchangeResult.java:232)
	at org.springframework.test.web.reactive.server.StatusAssertions.assertStatusAndReturn(StatusAssertions.java:236)
	at org.springframework.test.web.reactive.server.StatusAssertions.isOk(StatusAssertions.java:68)
	at com.pibbletv.user_service.integration.UserControllerTest.testGetUser_shouldReturnUser_whenFound(UserControllerTest.java:264)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
</failure>
  </testcase>
  <testcase name="testUnbanUser_shouldReturnOk_whenUserIsBanned()" classname="com.pibbletv.user_service.integration.UserControllerTest" time="0.017">
    <failure message="java.lang.AssertionError: Status expected:&lt;200 OK&gt; but was:&lt;403 FORBIDDEN&gt;" type="java.lang.AssertionError">java.lang.AssertionError: Status expected:&lt;200 OK&gt; but was:&lt;403 FORBIDDEN&gt;
	at org.springframework.test.util.AssertionErrors.fail(AssertionErrors.java:61)
	at org.springframework.test.util.AssertionErrors.assertEquals(AssertionErrors.java:128)
	at org.springframework.test.web.reactive.server.StatusAssertions.lambda$assertStatusAndReturn$4(StatusAssertions.java:236)
	at org.springframework.test.web.reactive.server.ExchangeResult.assertWithDiagnostics(ExchangeResult.java:232)
	at org.springframework.test.web.reactive.server.StatusAssertions.assertStatusAndReturn(StatusAssertions.java:236)
	at org.springframework.test.web.reactive.server.StatusAssertions.isOk(StatusAssertions.java:68)
	at com.pibbletv.user_service.integration.UserControllerTest.testUnbanUser_shouldReturnOk_whenUserIsBanned(UserControllerTest.java:210)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
</failure>
  </testcase>
  <testcase name="testSaveUser_shouldReturnOk_whenUserIsSavedSuccessfully()" classname="com.pibbletv.user_service.integration.UserControllerTest" time="0.015">
    <failure message="java.lang.AssertionError: Status expected:&lt;200 OK&gt; but was:&lt;403 FORBIDDEN&gt;" type="java.lang.AssertionError">java.lang.AssertionError: Status expected:&lt;200 OK&gt; but was:&lt;403 FORBIDDEN&gt;
	at org.springframework.test.util.AssertionErrors.fail(AssertionErrors.java:61)
	at org.springframework.test.util.AssertionErrors.assertEquals(AssertionErrors.java:128)
	at org.springframework.test.web.reactive.server.StatusAssertions.lambda$assertStatusAndReturn$4(StatusAssertions.java:236)
	at org.springframework.test.web.reactive.server.ExchangeResult.assertWithDiagnostics(ExchangeResult.java:232)
	at org.springframework.test.web.reactive.server.StatusAssertions.assertStatusAndReturn(StatusAssertions.java:236)
	at org.springframework.test.web.reactive.server.StatusAssertions.isOk(StatusAssertions.java:68)
	at com.pibbletv.user_service.integration.UserControllerTest.testSaveUser_shouldReturnOk_whenUserIsSavedSuccessfully(UserControllerTest.java:76)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
</failure>
  </testcase>
  <testcase name="testSaveUser_shouldReturnBadRequest_whenUserAlreadyExists()" classname="com.pibbletv.user_service.integration.UserControllerTest" time="0.016">
    <failure message="java.lang.AssertionError: Status expected:&lt;400 BAD_REQUEST&gt; but was:&lt;403 FORBIDDEN&gt;" type="java.lang.AssertionError">java.lang.AssertionError: Status expected:&lt;400 BAD_REQUEST&gt; but was:&lt;403 FORBIDDEN&gt;
	at org.springframework.test.util.AssertionErrors.fail(AssertionErrors.java:61)
	at org.springframework.test.util.AssertionErrors.assertEquals(AssertionErrors.java:128)
	at org.springframework.test.web.reactive.server.StatusAssertions.lambda$assertStatusAndReturn$4(StatusAssertions.java:236)
	at org.springframework.test.web.reactive.server.ExchangeResult.assertWithDiagnostics(ExchangeResult.java:232)
	at org.springframework.test.web.reactive.server.StatusAssertions.assertStatusAndReturn(StatusAssertions.java:236)
	at org.springframework.test.web.reactive.server.StatusAssertions.isBadRequest(StatusAssertions.java:131)
	at com.pibbletv.user_service.integration.UserControllerTest.testSaveUser_shouldReturnBadRequest_whenUserAlreadyExists(UserControllerTest.java:93)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
</failure>
  </testcase>
  <testcase name="testBanUser_shouldReturnBadRequest_whenUserNotFound()" classname="com.pibbletv.user_service.integration.UserControllerTest" time="0.014">
    <failure message="java.lang.AssertionError: Status expected:&lt;400 BAD_REQUEST&gt; but was:&lt;403 FORBIDDEN&gt;" type="java.lang.AssertionError">java.lang.AssertionError: Status expected:&lt;400 BAD_REQUEST&gt; but was:&lt;403 FORBIDDEN&gt;
	at org.springframework.test.util.AssertionErrors.fail(AssertionErrors.java:61)
	at org.springframework.test.util.AssertionErrors.assertEquals(AssertionErrors.java:128)
	at org.springframework.test.web.reactive.server.StatusAssertions.lambda$assertStatusAndReturn$4(StatusAssertions.java:236)
	at org.springframework.test.web.reactive.server.ExchangeResult.assertWithDiagnostics(ExchangeResult.java:232)
	at org.springframework.test.web.reactive.server.StatusAssertions.assertStatusAndReturn(StatusAssertions.java:236)
	at org.springframework.test.web.reactive.server.StatusAssertions.isBadRequest(StatusAssertions.java:131)
	at com.pibbletv.user_service.integration.UserControllerTest.testBanUser_shouldReturnBadRequest_whenUserNotFound(UserControllerTest.java:185)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
</failure>
  </testcase>
  <testcase name="testBanUser_shouldReturnForbidden_whenUserIsNotAdmin()" classname="com.pibbletv.user_service.integration.UserControllerTest" time="0.009"/>
  <testcase name="testBanUser_shouldReturnBadRequest_whenUserAlreadyBanned()" classname="com.pibbletv.user_service.integration.UserControllerTest" time="0.013">
    <failure message="java.lang.AssertionError: Status expected:&lt;400 BAD_REQUEST&gt; but was:&lt;403 FORBIDDEN&gt;" type="java.lang.AssertionError">java.lang.AssertionError: Status expected:&lt;400 BAD_REQUEST&gt; but was:&lt;403 FORBIDDEN&gt;
	at org.springframework.test.util.AssertionErrors.fail(AssertionErrors.java:61)
	at org.springframework.test.util.AssertionErrors.assertEquals(AssertionErrors.java:128)
	at org.springframework.test.web.reactive.server.StatusAssertions.lambda$assertStatusAndReturn$4(StatusAssertions.java:236)
	at org.springframework.test.web.reactive.server.ExchangeResult.assertWithDiagnostics(ExchangeResult.java:232)
	at org.springframework.test.web.reactive.server.StatusAssertions.assertStatusAndReturn(StatusAssertions.java:236)
	at org.springframework.test.web.reactive.server.StatusAssertions.isBadRequest(StatusAssertions.java:131)
	at com.pibbletv.user_service.integration.UserControllerTest.testBanUser_shouldReturnBadRequest_whenUserAlreadyBanned(UserControllerTest.java:171)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
</failure>
  </testcase>
  <testcase name="testBanUser_shouldReturnOk_whenUserIsFoundAndNotBanned()" classname="com.pibbletv.user_service.integration.UserControllerTest" time="0.013">
    <failure message="java.lang.AssertionError: Status expected:&lt;200 OK&gt; but was:&lt;403 FORBIDDEN&gt;" type="java.lang.AssertionError">java.lang.AssertionError: Status expected:&lt;200 OK&gt; but was:&lt;403 FORBIDDEN&gt;
	at org.springframework.test.util.AssertionErrors.fail(AssertionErrors.java:61)
	at org.springframework.test.util.AssertionErrors.assertEquals(AssertionErrors.java:128)
	at org.springframework.test.web.reactive.server.StatusAssertions.lambda$assertStatusAndReturn$4(StatusAssertions.java:236)
	at org.springframework.test.web.reactive.server.ExchangeResult.assertWithDiagnostics(ExchangeResult.java:232)
	at org.springframework.test.web.reactive.server.StatusAssertions.assertStatusAndReturn(StatusAssertions.java:236)
	at org.springframework.test.web.reactive.server.StatusAssertions.isOk(StatusAssertions.java:68)
	at com.pibbletv.user_service.integration.UserControllerTest.testBanUser_shouldReturnOk_whenUserIsFoundAndNotBanned(UserControllerTest.java:155)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
</failure>
  </testcase>
  <testcase name="testUnbanUser_shouldReturnForbidden_whenUserIsNotAdmin()" classname="com.pibbletv.user_service.integration.UserControllerTest" time="0.01"/>
  <testcase name="testUnbanUser_shouldReturnBadRequest_whenUserIsNotBanned()" classname="com.pibbletv.user_service.integration.UserControllerTest" time="0.013">
    <failure message="java.lang.AssertionError: Status expected:&lt;400 BAD_REQUEST&gt; but was:&lt;403 FORBIDDEN&gt;" type="java.lang.AssertionError">java.lang.AssertionError: Status expected:&lt;400 BAD_REQUEST&gt; but was:&lt;403 FORBIDDEN&gt;
	at org.springframework.test.util.AssertionErrors.fail(AssertionErrors.java:61)
	at org.springframework.test.util.AssertionErrors.assertEquals(AssertionErrors.java:128)
	at org.springframework.test.web.reactive.server.StatusAssertions.lambda$assertStatusAndReturn$4(StatusAssertions.java:236)
	at org.springframework.test.web.reactive.server.ExchangeResult.assertWithDiagnostics(ExchangeResult.java:232)
	at org.springframework.test.web.reactive.server.StatusAssertions.assertStatusAndReturn(StatusAssertions.java:236)
	at org.springframework.test.web.reactive.server.StatusAssertions.isBadRequest(StatusAssertions.java:131)
	at com.pibbletv.user_service.integration.UserControllerTest.testUnbanUser_shouldReturnBadRequest_whenUserIsNotBanned(UserControllerTest.java:226)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
</failure>
  </testcase>
  <testcase name="testUpdateUser_shouldReturnOk_whenUserExists()" classname="com.pibbletv.user_service.integration.UserControllerTest" time="0.014">
    <failure message="java.lang.AssertionError: Status expected:&lt;200 OK&gt; but was:&lt;403 FORBIDDEN&gt;" type="java.lang.AssertionError">java.lang.AssertionError: Status expected:&lt;200 OK&gt; but was:&lt;403 FORBIDDEN&gt;
	at org.springframework.test.util.AssertionErrors.fail(AssertionErrors.java:61)
	at org.springframework.test.util.AssertionErrors.assertEquals(AssertionErrors.java:128)
	at org.springframework.test.web.reactive.server.StatusAssertions.lambda$assertStatusAndReturn$4(StatusAssertions.java:236)
	at org.springframework.test.web.reactive.server.ExchangeResult.assertWithDiagnostics(ExchangeResult.java:232)
	at org.springframework.test.web.reactive.server.StatusAssertions.assertStatusAndReturn(StatusAssertions.java:236)
	at org.springframework.test.web.reactive.server.StatusAssertions.isOk(StatusAssertions.java:68)
	at com.pibbletv.user_service.integration.UserControllerTest.testUpdateUser_shouldReturnOk_whenUserExists(UserControllerTest.java:109)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
</failure>
  </testcase>
  <testcase name="testGetUser_shouldReturnNotFound_whenUserDoesNotExist()" classname="com.pibbletv.user_service.integration.UserControllerTest" time="0.017">
    <failure message="java.lang.AssertionError: Status expected:&lt;404 NOT_FOUND&gt; but was:&lt;401 UNAUTHORIZED&gt;" type="java.lang.AssertionError">java.lang.AssertionError: Status expected:&lt;404 NOT_FOUND&gt; but was:&lt;401 UNAUTHORIZED&gt;
	at org.springframework.test.util.AssertionErrors.fail(AssertionErrors.java:61)
	at org.springframework.test.util.AssertionErrors.assertEquals(AssertionErrors.java:128)
	at org.springframework.test.web.reactive.server.StatusAssertions.lambda$assertStatusAndReturn$4(StatusAssertions.java:236)
	at org.springframework.test.web.reactive.server.ExchangeResult.assertWithDiagnostics(ExchangeResult.java:232)
	at org.springframework.test.web.reactive.server.StatusAssertions.assertStatusAndReturn(StatusAssertions.java:236)
	at org.springframework.test.web.reactive.server.StatusAssertions.isNotFound(StatusAssertions.java:153)
	at com.pibbletv.user_service.integration.UserControllerTest.testGetUser_shouldReturnNotFound_whenUserDoesNotExist(UserControllerTest.java:279)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
</failure>
  </testcase>
  <system-out><![CDATA[02:40:18.724 [Test worker] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils -- Could not detect default configuration classes for test class [com.pibbletv.user_service.integration.UserControllerTest]: UserControllerTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
02:40:19.003 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper -- Found @SpringBootConfiguration com.pibbletv.user_service.UserServiceApplication for test class com.pibbletv.user_service.integration.UserControllerTest

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/

 :: Spring Boot ::                (v3.4.4)

2025-05-10T02:40:23.040+02:00  INFO 8148 --- [user-service] [    Test worker] c.p.u.integration.UserControllerTest     : Starting UserControllerTest using Java 17.0.14 with PID 8148 (started by hristo in D:\Individual Assignment\PibbleTV-Backend\user-service)
2025-05-10T02:40:23.042+02:00  INFO 8148 --- [user-service] [    Test worker] c.p.u.integration.UserControllerTest     : The following 1 profile is active: "dev"
2025-05-10T02:40:24.610+02:00  INFO 8148 --- [user-service] [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
2025-05-10T02:40:25.002+02:00  INFO 8148 --- [user-service] [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 372 ms. Found 1 R2DBC repository interface.
2025-05-10T02:40:25.353+02:00  INFO 8148 --- [user-service] [    Test worker] o.s.cloud.context.scope.GenericScope     : BeanFactory id=6c488507-583e-30e1-ba8e-51f6189a64b3
2025-05-10T02:40:27.423+02:00  INFO 8148 --- [user-service] [    Test worker] ctiveUserDetailsServiceAutoConfiguration : 

Using generated security password: 21b8e425-bdbb-457e-b212-442556a5d9ba

2025-05-10T02:40:28.327+02:00  INFO 8148 --- [user-service] [    Test worker] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2025-05-10T02:40:28.582+02:00  WARN 8148 --- [user-service] [    Test worker] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-05-10T02:40:28.654+02:00  INFO 8148 --- [user-service] [    Test worker] c.p.u.integration.UserControllerTest     : Started UserControllerTest in 6.783 seconds (process running for 12.265)
2025-05-10T02:40:29.033+02:00 ERROR 8148 --- [user-service] [    Test worker] o.s.t.w.reactive.server.ExchangeResult   : Request details for assertion failure:

> PUT /user/unbanUser?username=nonExistentUser
> WebTestClient-Request-Id: [1]

No content

< 403 FORBIDDEN Forbidden
< Content-Type: [text/plain]
< Cache-Control: [no-cache, no-store, max-age=0, must-revalidate]
< Pragma: [no-cache]
< Expires: [0]
< X-Content-Type-Options: [nosniff]
< X-Frame-Options: [DENY]
< X-XSS-Protection: [0]
< Referrer-Policy: [no-referrer]

An expected CSRF token cannot be found

2025-05-10T02:40:29.160+02:00 ERROR 8148 --- [user-service] [    Test worker] o.s.t.w.reactive.server.ExchangeResult   : Request details for assertion failure:

> PUT /user/updateUser
> WebTestClient-Request-Id: [2]
> Content-Type: [application/json]
> Content-Length: [94]

{"id":99,"username":"nonExistingUser","bgImage":"AQID","profileImage":"AQID","isBanned":false}

< 403 FORBIDDEN Forbidden
< Content-Type: [text/plain]
< Cache-Control: [no-cache, no-store, max-age=0, must-revalidate]
< Pragma: [no-cache]
< Expires: [0]
< X-Content-Type-Options: [nosniff]
< X-Frame-Options: [DENY]
< X-XSS-Protection: [0]
< Referrer-Policy: [no-referrer]

An expected CSRF token cannot be found

2025-05-10T02:40:29.273+02:00 ERROR 8148 --- [user-service] [    Test worker] o.s.t.w.reactive.server.ExchangeResult   : Request details for assertion failure:

> GET /user/getUser?username=existingUser
> WebTestClient-Request-Id: [3]

No content

< 401 UNAUTHORIZED Unauthorized
< WWW-Authenticate: [Basic realm="Realm"]
< Cache-Control: [no-cache, no-store, max-age=0, must-revalidate]
< Pragma: [no-cache]
< Expires: [0]
< X-Content-Type-Options: [nosniff]
< X-Frame-Options: [DENY]
< X-XSS-Protection: [0]
< Referrer-Policy: [no-referrer]

0 bytes of content (unknown content-type).

2025-05-10T02:40:29.297+02:00 ERROR 8148 --- [user-service] [    Test worker] o.s.t.w.reactive.server.ExchangeResult   : Request details for assertion failure:

> PUT /user/unbanUser?username=bannedUser
> WebTestClient-Request-Id: [4]

No content

< 403 FORBIDDEN Forbidden
< Content-Type: [text/plain]
< Cache-Control: [no-cache, no-store, max-age=0, must-revalidate]
< Pragma: [no-cache]
< Expires: [0]
< X-Content-Type-Options: [nosniff]
< X-Frame-Options: [DENY]
< X-XSS-Protection: [0]
< Referrer-Policy: [no-referrer]

An expected CSRF token cannot be found

2025-05-10T02:40:29.316+02:00 ERROR 8148 --- [user-service] [    Test worker] o.s.t.w.reactive.server.ExchangeResult   : Request details for assertion failure:

> POST /user/addUser?username=testUser
> WebTestClient-Request-Id: [5]

No content

< 403 FORBIDDEN Forbidden
< Content-Type: [text/plain]
< Cache-Control: [no-cache, no-store, max-age=0, must-revalidate]
< Pragma: [no-cache]
< Expires: [0]
< X-Content-Type-Options: [nosniff]
< X-Frame-Options: [DENY]
< X-XSS-Protection: [0]
< Referrer-Policy: [no-referrer]

An expected CSRF token cannot be found

2025-05-10T02:40:29.334+02:00 ERROR 8148 --- [user-service] [    Test worker] o.s.t.w.reactive.server.ExchangeResult   : Request details for assertion failure:

> POST /user/addUser?username=testUser
> WebTestClient-Request-Id: [6]

No content

< 403 FORBIDDEN Forbidden
< Content-Type: [text/plain]
< Cache-Control: [no-cache, no-store, max-age=0, must-revalidate]
< Pragma: [no-cache]
< Expires: [0]
< X-Content-Type-Options: [nosniff]
< X-Frame-Options: [DENY]
< X-XSS-Protection: [0]
< Referrer-Policy: [no-referrer]

An expected CSRF token cannot be found

2025-05-10T02:40:29.353+02:00 ERROR 8148 --- [user-service] [    Test worker] o.s.t.w.reactive.server.ExchangeResult   : Request details for assertion failure:

> PUT /user/banUser?username=nonExistentUser
> WebTestClient-Request-Id: [7]

No content

< 403 FORBIDDEN Forbidden
< Content-Type: [text/plain]
< Cache-Control: [no-cache, no-store, max-age=0, must-revalidate]
< Pragma: [no-cache]
< Expires: [0]
< X-Content-Type-Options: [nosniff]
< X-Frame-Options: [DENY]
< X-XSS-Protection: [0]
< Referrer-Policy: [no-referrer]

An expected CSRF token cannot be found

2025-05-10T02:40:29.384+02:00 ERROR 8148 --- [user-service] [    Test worker] o.s.t.w.reactive.server.ExchangeResult   : Request details for assertion failure:

> PUT /user/banUser?username=alreadyBannedUser
> WebTestClient-Request-Id: [9]

No content

< 403 FORBIDDEN Forbidden
< Content-Type: [text/plain]
< Cache-Control: [no-cache, no-store, max-age=0, must-revalidate]
< Pragma: [no-cache]
< Expires: [0]
< X-Content-Type-Options: [nosniff]
< X-Frame-Options: [DENY]
< X-XSS-Protection: [0]
< Referrer-Policy: [no-referrer]

An expected CSRF token cannot be found

2025-05-10T02:40:29.400+02:00 ERROR 8148 --- [user-service] [    Test worker] o.s.t.w.reactive.server.ExchangeResult   : Request details for assertion failure:

> PUT /user/banUser?username=userToBan
> WebTestClient-Request-Id: [10]

No content

< 403 FORBIDDEN Forbidden
< Content-Type: [text/plain]
< Cache-Control: [no-cache, no-store, max-age=0, must-revalidate]
< Pragma: [no-cache]
< Expires: [0]
< X-Content-Type-Options: [nosniff]
< X-Frame-Options: [DENY]
< X-XSS-Protection: [0]
< Referrer-Policy: [no-referrer]

An expected CSRF token cannot be found

2025-05-10T02:40:29.428+02:00 ERROR 8148 --- [user-service] [    Test worker] o.s.t.w.reactive.server.ExchangeResult   : Request details for assertion failure:

> PUT /user/unbanUser?username=notBannedUser
> WebTestClient-Request-Id: [12]

No content

< 403 FORBIDDEN Forbidden
< Content-Type: [text/plain]
< Cache-Control: [no-cache, no-store, max-age=0, must-revalidate]
< Pragma: [no-cache]
< Expires: [0]
< X-Content-Type-Options: [nosniff]
< X-Frame-Options: [DENY]
< X-XSS-Protection: [0]
< Referrer-Policy: [no-referrer]

An expected CSRF token cannot be found

2025-05-10T02:40:29.445+02:00 ERROR 8148 --- [user-service] [    Test worker] o.s.t.w.reactive.server.ExchangeResult   : Request details for assertion failure:

> PUT /user/updateUser
> WebTestClient-Request-Id: [13]
> Content-Type: [application/json]
> Content-Length: [89]

{"id":1,"username":"updatedUser","bgImage":"AQID","profileImage":"AQID","isBanned":false}

< 403 FORBIDDEN Forbidden
< Content-Type: [text/plain]
< Cache-Control: [no-cache, no-store, max-age=0, must-revalidate]
< Pragma: [no-cache]
< Expires: [0]
< X-Content-Type-Options: [nosniff]
< X-Frame-Options: [DENY]
< X-XSS-Protection: [0]
< Referrer-Policy: [no-referrer]

An expected CSRF token cannot be found

2025-05-10T02:40:29.464+02:00 ERROR 8148 --- [user-service] [    Test worker] o.s.t.w.reactive.server.ExchangeResult   : Request details for assertion failure:

> GET /user/getUser?username=nonExistingUser
> WebTestClient-Request-Id: [14]

No content

< 401 UNAUTHORIZED Unauthorized
< WWW-Authenticate: [Basic realm="Realm"]
< Cache-Control: [no-cache, no-store, max-age=0, must-revalidate]
< Pragma: [no-cache]
< Expires: [0]
< X-Content-Type-Options: [nosniff]
< X-Frame-Options: [DENY]
< X-XSS-Protection: [0]
< Referrer-Policy: [no-referrer]

0 bytes of content (unknown content-type).

]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
